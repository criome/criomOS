[
  {
    "context": "VimControl && !menu",
    "bindings": {
      "u": [
        "vim::PushOperator",
        {
          "Object": {
            "around": false
          }
        }
      ],
      "a": [
        "vim::PushOperator",
        {
          "Object": {
            "around": true
          }
        }
      ],
      "h": "vim::Left",
      "left": "vim::Left",
      "backspace": "vim::Backspace",
      "n": "vim::Down",
      "down": "vim::Down",
      "ctrl-n": "vim::Down",
      "enter": "vim::NextLineStart",
      "ctrl-m": "vim::NextLineStart",
      "+": "vim::NextLineStart",
      "-": "vim::PreviousLineStart",
      "tab": "vim::Tab",
      "shift-tab": "vim::Tab",
      "e": "vim::Up",
      "up": "vim::Up",
      "i": "vim::Right",
      "right": "vim::Right",
      "space": "vim::Space",
      "$": "vim::EndOfLine",
      "end": "vim::EndOfLine",
      "^": "vim::FirstNonWhitespace",
      "_": "vim::StartOfLineDownward",
      "g _": "vim::EndOfLineDownward",
      "shift-g": "vim::EndOfDocument",
      "{": "vim::StartOfParagraph",
      "}": "vim::EndOfParagraph",
      "(": "vim::SentenceBackward",
      ")": "vim::SentenceForward",
      "|": "vim::GoToColumn",
      "] ]": "vim::NextSectionStart",
      "] [": "vim::NextSectionEnd",
      "[ [": "vim::PreviousSectionStart",
      "[ ]": "vim::PreviousSectionEnd",
      "] m": "vim::NextMethodStart",
      "] M": "vim::NextMethodEnd",
      "[ m": "vim::PreviousMethodStart",
      "[ M": "vim::PreviousMethodEnd",
      "[ *": "vim::PreviousComment",
      "[ /": "vim::PreviousComment",
      "] *": "vim::NextComment",
      "] /": "vim::NextComment",
      "w": "vim::NextWordStart",
      "f": "vim::NextWordEnd",
      "b": "vim::PreviousWordStart",
      "g f": "vim::PreviousWordEnd",
      "shift-w": [
        "vim::NextWordStart",
        {
          "ignorePunctuation": true
        }
      ],
      "shift-f": [
        "vim::NextWordEnd",
        {
          "ignorePunctuation": true
        }
      ],
      "shift-b": [
        "vim::PreviousWordStart",
        {
          "ignorePunctuation": true
        }
      ],
      "g shift-f": [
        "vim::PreviousWordEnd",
        {
          "ignorePunctuation": true
        }
      ],
      "/": "vim::Search",
      "g /": "pane::DeploySearch",
      "?": [
        "vim::Search",
        {
          "backwards": true
        }
      ],
      "*": "vim::MoveToNext",
      "#": "vim::MoveToPrev",
      "k": "vim::MoveToNextMatch",
      "shift-k": "vim::MoveToPrevMatch",
      "%": "vim::Matching",
      "] }": [
        "vim::UnmatchedForward",
        {
          "char": "}"
        }
      ],
      "[ {": [
        "vim::UnmatchedBackward",
        {
          "char": "{"
        }
      ],
      "] )": [
        "vim::UnmatchedForward",
        {
          "char": ")"
        }
      ],
      "[ (": [
        "vim::UnmatchedBackward",
        {
          "char": "("
        }
      ],
      "t": [
        "vim::PushOperator",
        {
          "FindForward": {
            "before": false
          }
        }
      ],
      "j": [
        "vim::PushOperator",
        {
          "FindForward": {
            "before": true
          }
        }
      ],
      "shift-t": [
        "vim::PushOperator",
        {
          "FindBackward": {
            "after": false
          }
        }
      ],
      "shift-j": [
        "vim::PushOperator",
        {
          "FindBackward": {
            "after": true
          }
        }
      ],
      "m": [
        "vim::PushOperator",
        "Mark"
      ],
      "'": [
        "vim::PushOperator",
        {
          "Jump": {
            "line": true
          }
        }
      ],
      "`": [
        "vim::PushOperator",
        {
          "Jump": {
            "line": false
          }
        }
      ],
      ";": "vim::RepeatFind",
      ",": "vim::RepeatFindReversed",
      "ctrl-o": "pane::GoBack",
      "ctrl-u": "pane::GoForward",
      "ctrl-]": "editor::GoToDefinition",
      "escape": [
        "vim::SwitchMode",
        "Normal"
      ],
      "ctrl-[": [
        "vim::SwitchMode",
        "Normal"
      ],
      "v": "vim::ToggleVisual",
      "shift-v": "vim::ToggleVisualLine",
      "ctrl-v": "vim::ToggleVisualBlock",
      "ctrl-q": "vim::ToggleVisualBlock",
      "shift-e": "editor::Hover",
      "shift-r": "vim::ToggleReplace",
      "0": "vim::StartOfLine",
      "home": "vim::StartOfLine",
      "ctrl-t": "vim::PageDown",
      "pagedown": "vim::PageDown",
      "ctrl-b": "vim::PageUp",
      "pageup": "vim::PageUp",
      "ctrl-d": "vim::ScrollDown",
      "ctrl-l": "vim::ScrollUp",
      "ctrl-f": "vim::LineDown",
      "ctrl-y": "vim::LineUp",
      "g g": "vim::StartOfDocument",
      "g h": "editor::Hover",
      "g j": "pane::ActivateNextItem",
      "g shift-j": "pane::ActivatePrevItem",
      "g d": "editor::GoToDefinition",
      "g shift-d": "editor::GoToDeclaration",
      "g y": "editor::GoToTypeDefinition",
      "g shift-u": "editor::GoToImplementation",
      "g x": "editor::OpenUrl",
      "g t": "editor::OpenFile",
      "g k": "vim::SelectNextMatch",
      "g shift-k": "vim::SelectPreviousMatch",
      "g i": "vim::SelectNext",
      "g shift-i": "vim::SelectPrevious",
      "g >": [
        "editor::SelectNext",
        {
          "replace_newest": true
        }
      ],
      "g <": [
        "editor::SelectPrevious",
        {
          "replace_newest": true
        }
      ],
      "g a": "editor::SelectAllMatches",
      "g s": "outline::Toggle",
      "g shift-s": "project_symbols::Toggle",
      "g .": "editor::ToggleCodeActions",
      "g shift-a": "editor::FindAllReferences",
      "g space": "editor::OpenExcerpts",
      "g *": [
        "vim::MoveToNext",
        {
          "partialWord": true
        }
      ],
      "g #": [
        "vim::MoveToPrev",
        {
          "partialWord": true
        }
      ],
      "g n": [
        "vim::Down",
        {
          "displayLines": true
        }
      ],
      "g down": [
        "vim::Down",
        {
          "displayLines": true
        }
      ],
      "g e": [
        "vim::Up",
        {
          "displayLines": true
        }
      ],
      "g up": [
        "vim::Up",
        {
          "displayLines": true
        }
      ],
      "g $": [
        "vim::EndOfLine",
        {
          "displayLines": true
        }
      ],
      "g end": [
        "vim::EndOfLine",
        {
          "displayLines": true
        }
      ],
      "g 0": [
        "vim::StartOfLine",
        {
          "displayLines": true
        }
      ],
      "g home": [
        "vim::StartOfLine",
        {
          "displayLines": true
        }
      ],
      "g ^": [
        "vim::FirstNonWhitespace",
        {
          "displayLines": true
        }
      ],
      "g v": "vim::RestoreVisualSelection",
      "g ]": "editor::GoToDiagnostic",
      "g [": "editor::GoToPrevDiagnostic",
      "g u": "vim::InsertAtPrevious",
      "g ,": "vim::ChangeListNewer",
      "g ;": "vim::ChangeListOlder",
      "shift-h": "vim::WindowTop",
      "shift-m": "vim::WindowMiddle",
      "shift-i": "vim::WindowBottom",
      "q": "vim::ToggleRecord",
      "shift-q": "vim::ReplayLastRecording",
      "@": [
        "vim::PushOperator",
        "ReplayRegister"
      ],
      "z enter": [
        "workspace::SendKeystrokes",
        "z t ^"
      ],
      "z -": [
        "workspace::SendKeystrokes",
        "z b ^"
      ],
      "z ^": [
        "workspace::SendKeystrokes",
        "shift-h k z b ^"
      ],
      "z +": [
        "workspace::SendKeystrokes",
        "shift-l j z t ^"
      ],
      "z j": "editor::ScrollCursorTop",
      "z z": "editor::ScrollCursorCenter",
      "z .": [
        "workspace::SendKeystrokes",
        "z z ^"
      ],
      "z b": "editor::ScrollCursorBottom",
      "z a": "editor::ToggleFold",
      "z shift-a": "editor::ToggleFoldRecursive",
      "z c": "editor::Fold",
      "z shift-c": "editor::FoldRecursive",
      "z o": "editor::UnfoldLines",
      "z shift-o": "editor::UnfoldRecursive",
      "z t": "editor::FoldSelectedRanges",
      "z shift-m": "editor::FoldAll",
      "z shift-r": "editor::UnfoldAll",
      "shift-z shift-q": [
        "pane::CloseActiveItem",
        {
          "saveIntent": "skip"
        }
      ],
      "shift-z shift-z": [
        "pane::CloseActiveItem",
        {
          "saveIntent": "saveAll"
        }
      ],
      "1": [
        "vim::Number",
        1
      ],
      "2": [
        "vim::Number",
        2
      ],
      "3": [
        "vim::Number",
        3
      ],
      "4": [
        "vim::Number",
        4
      ],
      "5": [
        "vim::Number",
        5
      ],
      "6": [
        "vim::Number",
        6
      ],
      "7": [
        "vim::Number",
        7
      ],
      "8": [
        "vim::Number",
        8
      ],
      "9": [
        "vim::Number",
        9
      ],
      "ctrl-w d": "editor::GoToDefinitionSplit",
      "ctrl-w g d": "editor::GoToDefinitionSplit",
      "ctrl-w shift-d": "editor::GoToTypeDefinitionSplit",
      "ctrl-w g shift-d": "editor::GoToTypeDefinitionSplit",
      "ctrl-w space": "editor::OpenExcerptsSplit",
      "ctrl-w g space": "editor::OpenExcerptsSplit",
      "ctrl-6": "pane::AlternateFile"
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "escape": "editor::Cancel",
      "ctrl-[": "editor::Cancel",
      ":": "command_palette::Toggle",
      ".": "vim::Repeat",
      "c": [
        "vim::PushOperator",
        "Change"
      ],
      "shift-c": "vim::ChangeToEndOfLine",
      "d": [
        "vim::PushOperator",
        "Delete"
      ],
      "shift-d": "vim::DeleteToEndOfLine",
      "shift-n": "vim::JoinLines",
      "y": [
        "vim::PushOperator",
        "Yank"
      ],
      "shift-y": "vim::YankLine",
      "u": "vim::InsertBefore",
      "shift-u": "vim::InsertFirstNonWhitespace",
      "a": "vim::InsertAfter",
      "shift-a": "vim::InsertEndOfLine",
      "x": "vim::DeleteRight",
      "shift-x": "vim::DeleteLeft",
      "o": "vim::InsertLineBelow",
      "shift-o": "vim::InsertLineAbove",
      "~": "vim::ChangeCase",
      "ctrl-a": "vim::Increment",
      "ctrl-x": "vim::Decrement",
      "p": "vim::Paste",
      "shift-p": [
        "vim::Paste",
        {
          "before": true
        }
      ],
      "l": "vim::Undo",
      "ctrl-r": "vim::Redo",
      "r": [
        "vim::PushOperator",
        "Replace"
      ],
      "s": "vim::Substitute",
      "shift-s": "vim::SubstituteLine",
      ">": [
        "vim::PushOperator",
        "Indent"
      ],
      "<": [
        "vim::PushOperator",
        "Outdent"
      ],
      "=": [
        "vim::PushOperator",
        "AutoIndent"
      ],
      "g l": [
        "vim::PushOperator",
        "Lowercase"
      ],
      "g shift-l": [
        "vim::PushOperator",
        "Uppercase"
      ],
      "g ~": [
        "vim::PushOperator",
        "OppositeCase"
      ],
      "\"": [
        "vim::PushOperator",
        "Register"
      ],
      "g q": [
        "vim::PushOperator",
        "Rewrap"
      ],
      "g w": [
        "vim::PushOperator",
        "Rewrap"
      ],
      "ctrl-pagedown": "pane::ActivateNextItem",
      "ctrl-pageup": "pane::ActivatePrevItem",
      "insert": "vim::InsertBefore",
      "[ x": "vim::SelectLargerSyntaxNode",
      "] x": "vim::SelectSmallerSyntaxNode",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPrevDiagnostic",
      "] c": "editor::GoToHunk",
      "[ c": "editor::GoToPrevHunk",
      "g c": [
        "vim::PushOperator",
        "ToggleComments"
      ]
    }
  },
  {
    "context": "VimControl && VimCount",
    "bindings": {
      "0": [
        "vim::Number",
        0
      ],
      ":": "vim::CountCommand"
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      ":": "vim::VisualCommand",
      "l": "vim::ConvertToLowerCase",
      "shift-l": "vim::ConvertToUpperCase",
      "o": "vim::OtherEnd",
      "shift-o": "vim::OtherEnd",
      "d": "vim::VisualDelete",
      "x": "vim::VisualDelete",
      "shift-d": "vim::VisualDeleteLine",
      "shift-x": "vim::VisualDeleteLine",
      "y": "vim::VisualYank",
      "shift-y": "vim::VisualYank",
      "p": "vim::Paste",
      "shift-p": [
        "vim::Paste",
        {
          "preserveClipboard": true
        }
      ],
      "s": "vim::Substitute",
      "shift-s": "vim::SubstituteLine",
      "shift-r": "vim::SubstituteLine",
      "c": "vim::Substitute",
      "~": "vim::ChangeCase",
      "*": [
        "vim::MoveToNext",
        {
          "partialWord": true
        }
      ],
      "#": [
        "vim::MoveToPrev",
        {
          "partialWord": true
        }
      ],
      "ctrl-a": "vim::Increment",
      "ctrl-x": "vim::Decrement",
      "g ctrl-a": [
        "vim::Increment",
        {
          "step": true
        }
      ],
      "g ctrl-x": [
        "vim::Decrement",
        {
          "step": true
        }
      ],
      "shift-u": "vim::InsertBefore",
      "shift-a": "vim::InsertAfter",
      "g shift-u": "vim::VisualInsertFirstNonWhiteSpace",
      "g shift-a": "vim::VisualInsertEndOfLine",
      "shift-n": "vim::JoinLines",
      "r": [
        "vim::PushOperator",
        "Replace"
      ],
      "ctrl-c": [
        "vim::SwitchMode",
        "Normal"
      ],
      "escape": [
        "vim::SwitchMode",
        "Normal"
      ],
      "ctrl-[": [
        "vim::SwitchMode",
        "Normal"
      ],
      ">": "vim::Indent",
      "<": "vim::Outdent",
      "=": "vim::AutoIndent",
      "u": [
        "vim::PushOperator",
        {
          "Object": {
            "around": false
          }
        }
      ],
      "a": [
        "vim::PushOperator",
        {
          "Object": {
            "around": true
          }
        }
      ],
      "g c": "vim::ToggleComments",
      "g q": "vim::Rewrap",
      "\"": [
        "vim::PushOperator",
        "Register"
      ],
      "[ x": "editor::SelectLargerSyntaxNode",
      "] x": "editor::SelectSmallerSyntaxNode"
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "escape": "vim::NormalBefore",
      "ctrl-c": "vim::NormalBefore",
      "ctrl-[": "vim::NormalBefore",
      "ctrl-x": null,
      "ctrl-x ctrl-o": "editor::ShowCompletions",
      "ctrl-x ctrl-a": "assistant::InlineAssist",
      "ctrl-x ctrl-c": "editor::ShowInlineCompletion",
      "ctrl-x ctrl-i": "editor::ToggleCodeActions",
      "ctrl-x ctrl-z": "editor::Cancel",
      "ctrl-w": "editor::DeleteToPreviousWordStart",
      "ctrl-l": "editor::DeleteToBeginningOfLine",
      "ctrl-j": "vim::Indent",
      "ctrl-d": "vim::Outdent",
      "ctrl-e": [
        "vim::PushOperator",
        {
          "Digraph": {
          }
        }
      ],
      "ctrl-v": [
        "vim::PushOperator",
        {
          "Literal": {
          }
        }
      ],
      "ctrl-shift-v": "editor::Paste",
      "ctrl-q": [
        "vim::PushOperator",
        {
          "Literal": {
          }
        }
      ],
      "ctrl-shift-q": [
        "vim::PushOperator",
        {
          "Literal": {
          }
        }
      ],
      "ctrl-r": [
        "vim::PushOperator",
        "Register"
      ],
      "insert": "vim::ToggleReplace",
      "ctrl-o": "vim::TemporaryNormal"
    }
  },
  {
    "context": "vim_mode == helix_normal",
    "bindings": {
      "u": "vim::InsertBefore",
      "a": "vim::InsertAfter",
      "d": "vim::HelixDelete",
      "w": "vim::NextWordStart",
      "f": "vim::NextWordEnd",
      "b": "vim::PreviousWordStart",
      "h": "vim::Left",
      "n": "vim::Down",
      "e": "vim::Up",
      "i": "vim::Right"
    }
  },
  {
    "context": "vim_mode == insert && !(showing_code_actions || showing_completions)",
    "bindings": {
      "ctrl-p": "editor::ShowCompletions",
      "ctrl-k": "editor::ShowCompletions"
    }
  },
  {
    "context": "vim_mode == replace",
    "bindings": {
      "escape": "vim::NormalBefore",
      "ctrl-c": "vim::NormalBefore",
      "ctrl-[": "vim::NormalBefore",
      "ctrl-e": [
        "vim::PushOperator",
        {
          "Digraph": {
          }
        }
      ],
      "ctrl-v": [
        "vim::PushOperator",
        {
          "Literal": {
          }
        }
      ],
      "ctrl-shift-v": "editor::Paste",
      "ctrl-q": [
        "vim::PushOperator",
        {
          "Literal": {
          }
        }
      ],
      "ctrl-shift-q": [
        "vim::PushOperator",
        {
          "Literal": {
          }
        }
      ],
      "backspace": "vim::UndoReplace",
      "tab": "vim::Tab",
      "enter": "vim::Enter",
      "insert": "vim::InsertBefore"
    }
  },
  {
    "context": "vim_mode == waiting",
    "bindings": {
      "tab": "vim::Tab",
      "enter": "vim::Enter",
      "escape": "vim::ClearOperators",
      "ctrl-c": "vim::ClearOperators",
      "ctrl-[": "vim::ClearOperators",
      "ctrl-e": [
        "vim::PushOperator",
        {
          "Digraph": {
          }
        }
      ],
      "ctrl-v": [
        "vim::PushOperator",
        {
          "Literal": {
          }
        }
      ],
      "ctrl-q": [
        "vim::PushOperator",
        {
          "Literal": {
          }
        }
      ]
    }
  },
  {
    "context": "vim_mode == operator",
    "bindings": {
      "escape": "vim::ClearOperators",
      "ctrl-c": "vim::ClearOperators",
      "ctrl-[": "vim::ClearOperators",
      "g c": "vim::Comment"
    }
  },
  {
    "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
    "bindings": {
      "w": "vim::Word",
      "shift-w": [
        "vim::Word",
        {
          "ignorePunctuation": true
        }
      ],
      "j": "vim::Tag",
      "s": "vim::Sentence",
      "p": "vim::Paragraph",
      "'": "vim::Quotes",
      "`": "vim::BackQuotes",
      "\"": "vim::DoubleQuotes",
      "|": "vim::VerticalBars",
      "(": "vim::Parentheses",
      ")": "vim::Parentheses",
      "b": "vim::Parentheses",
      "[": "vim::SquareBrackets",
      "]": "vim::SquareBrackets",
      "r": "vim::SquareBrackets",
      "{": "vim::CurlyBrackets",
      "}": "vim::CurlyBrackets",
      "shift-b": "vim::CurlyBrackets",
      "<": "vim::AngleBrackets",
      ">": "vim::AngleBrackets",
      "a": "vim::Argument",
      "u": "vim::IndentObj",
      "shift-u": [
        "vim::IndentObj",
        {
          "includeBelow": true
        }
      ],
      "t": "vim::Method",
      "c": "vim::Class"
    }
  },
  {
    "context": "vim_operator == c",
    "bindings": {
      "c": "vim::CurrentLine",
      "d": "editor::Rename",
      "s": [
        "vim::PushOperator",
        {
          "ChangeSurrounds": {
          }
        }
      ]
    }
  },
  {
    "context": "vim_operator == d",
    "bindings": {
      "d": "vim::CurrentLine",
      "s": [
        "vim::PushOperator",
        "DeleteSurrounds"
      ],
      "o": "editor::ToggleHunkDiff",
      "p": "editor::RevertSelectedHunks"
    }
  },
  {
    "context": "vim_operator == gu",
    "bindings": {
      "g l": "vim::CurrentLine",
      "l": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_operator == gU",
    "bindings": {
      "g shift-l": "vim::CurrentLine",
      "shift-l": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_operator == g~",
    "bindings": {
      "g ~": "vim::CurrentLine",
      "~": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_operator == gq",
    "bindings": {
      "g q": "vim::CurrentLine",
      "q": "vim::CurrentLine",
      "g w": "vim::CurrentLine",
      "w": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_operator == y",
    "bindings": {
      "y": "vim::CurrentLine",
      "s": [
        "vim::PushOperator",
        {
          "AddSurrounds": {
          }
        }
      ]
    }
  },
  {
    "context": "vim_operator == ys",
    "bindings": {
      "s": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_operator == >",
    "bindings": {
      ">": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_operator == <",
    "bindings": {
      "<": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_operator == eq",
    "bindings": {
      "=": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_operator == gc",
    "bindings": {
      "c": "vim::CurrentLine"
    }
  },
  {
    "context": "vim_mode == literal",
    "bindings": {
      "ctrl-@": [
        "vim::Literal",
        [
          "ctrl-@",
          "\u0000"
        ]
      ],
      "ctrl-a": [
        "vim::Literal",
        [
          "ctrl-a",
          "\u0001"
        ]
      ],
      "ctrl-b": [
        "vim::Literal",
        [
          "ctrl-b",
          "\u0002"
        ]
      ],
      "ctrl-c": [
        "vim::Literal",
        [
          "ctrl-c",
          "\u0003"
        ]
      ],
      "ctrl-d": [
        "vim::Literal",
        [
          "ctrl-d",
          "\u0004"
        ]
      ],
      "ctrl-f": [
        "vim::Literal",
        [
          "ctrl-e",
          "\u0005"
        ]
      ],
      "ctrl-t": [
        "vim::Literal",
        [
          "ctrl-f",
          "\u0006"
        ]
      ],
      "ctrl-g": [
        "vim::Literal",
        [
          "ctrl-g",
          "\u0007"
        ]
      ],
      "ctrl-h": [
        "vim::Literal",
        [
          "ctrl-h",
          "\b"
        ]
      ],
      "ctrl-u": [
        "vim::Literal",
        [
          "ctrl-i",
          "\t"
        ]
      ],
      "ctrl-n": [
        "vim::Literal",
        [
          "ctrl-j",
          "\n"
        ]
      ],
      "ctrl-e": [
        "vim::Literal",
        [
          "ctrl-k",
          "\u000b"
        ]
      ],
      "ctrl-i": [
        "vim::Literal",
        [
          "ctrl-l",
          "\f"
        ]
      ],
      "ctrl-m": [
        "vim::Literal",
        [
          "ctrl-m",
          "\r"
        ]
      ],
      "ctrl-k": [
        "vim::Literal",
        [
          "ctrl-n",
          "\u000e"
        ]
      ],
      "ctrl-o": [
        "vim::Literal",
        [
          "ctrl-o",
          "\u000f"
        ]
      ],
      "ctrl-p": [
        "vim::Literal",
        [
          "ctrl-p",
          "\u0010"
        ]
      ],
      "ctrl-q": [
        "vim::Literal",
        [
          "ctrl-q",
          "\u0011"
        ]
      ],
      "ctrl-r": [
        "vim::Literal",
        [
          "ctrl-r",
          "\u0012"
        ]
      ],
      "ctrl-s": [
        "vim::Literal",
        [
          "ctrl-s",
          "\u0013"
        ]
      ],
      "ctrl-j": [
        "vim::Literal",
        [
          "ctrl-t",
          "\u0014"
        ]
      ],
      "ctrl-l": [
        "vim::Literal",
        [
          "ctrl-u",
          "\u0015"
        ]
      ],
      "ctrl-v": [
        "vim::Literal",
        [
          "ctrl-v",
          "\u0016"
        ]
      ],
      "ctrl-w": [
        "vim::Literal",
        [
          "ctrl-w",
          "\u0017"
        ]
      ],
      "ctrl-x": [
        "vim::Literal",
        [
          "ctrl-x",
          "\u0018"
        ]
      ],
      "ctrl-y": [
        "vim::Literal",
        [
          "ctrl-y",
          "\u0019"
        ]
      ],
      "ctrl-z": [
        "vim::Literal",
        [
          "ctrl-z",
          "\u001a"
        ]
      ],
      "ctrl-[": [
        "vim::Literal",
        [
          "ctrl-[",
          "\u001b"
        ]
      ],
      "ctrl-\\": [
        "vim::Literal",
        [
          "ctrl-\\",
          "\u001c"
        ]
      ],
      "ctrl-]": [
        "vim::Literal",
        [
          "ctrl-]",
          "\u001d"
        ]
      ],
      "ctrl-^": [
        "vim::Literal",
        [
          "ctrl-^",
          "\u001e"
        ]
      ],
      "ctrl-_": [
        "vim::Literal",
        [
          "ctrl-_",
          "\u001f"
        ]
      ],
      "escape": [
        "vim::Literal",
        [
          "escape",
          "\u001b"
        ]
      ],
      "enter": [
        "vim::Literal",
        [
          "enter",
          "\r"
        ]
      ],
      "tab": [
        "vim::Literal",
        [
          "tab",
          "\t"
        ]
      ],
      "backspace": [
        "vim::Literal",
        [
          "backspace",
          "\b"
        ]
      ],
      "delete": [
        "vim::Literal",
        [
          "delete",
          ""
        ]
      ]
    }
  },
  {
    "context": "BufferSearchBar && !in_replace",
    "bindings": {
      "enter": "vim::SearchSubmit",
      "escape": "buffer_search::Dismiss"
    }
  },
  {
    "context": "ProjectPanel || CollabPanel || OutlinePanel || ChatPanel || VimControl || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView",
    "bindings": {
      "ctrl-w": null,
      "ctrl-w left": [
        "workspace::ActivatePaneInDirection",
        "Left"
      ],
      "ctrl-w right": [
        "workspace::ActivatePaneInDirection",
        "Right"
      ],
      "ctrl-w up": [
        "workspace::ActivatePaneInDirection",
        "Up"
      ],
      "ctrl-w down": [
        "workspace::ActivatePaneInDirection",
        "Down"
      ],
      "ctrl-w h": [
        "workspace::ActivatePaneInDirection",
        "Left"
      ],
      "ctrl-w i": [
        "workspace::ActivatePaneInDirection",
        "Right"
      ],
      "ctrl-w e": [
        "workspace::ActivatePaneInDirection",
        "Up"
      ],
      "ctrl-w n": [
        "workspace::ActivatePaneInDirection",
        "Down"
      ],
      "ctrl-w ctrl-h": [
        "workspace::ActivatePaneInDirection",
        "Left"
      ],
      "ctrl-w ctrl-i": [
        "workspace::ActivatePaneInDirection",
        "Right"
      ],
      "ctrl-w ctrl-e": [
        "workspace::ActivatePaneInDirection",
        "Up"
      ],
      "ctrl-w ctrl-n": [
        "workspace::ActivatePaneInDirection",
        "Down"
      ],
      "ctrl-w shift-left": [
        "workspace::SwapPaneInDirection",
        "Left"
      ],
      "ctrl-w shift-right": [
        "workspace::SwapPaneInDirection",
        "Right"
      ],
      "ctrl-w shift-up": [
        "workspace::SwapPaneInDirection",
        "Up"
      ],
      "ctrl-w shift-down": [
        "workspace::SwapPaneInDirection",
        "Down"
      ],
      "ctrl-w shift-h": [
        "workspace::SwapPaneInDirection",
        "Left"
      ],
      "ctrl-w shift-i": [
        "workspace::SwapPaneInDirection",
        "Right"
      ],
      "ctrl-w shift-e": [
        "workspace::SwapPaneInDirection",
        "Up"
      ],
      "ctrl-w shift-n": [
        "workspace::SwapPaneInDirection",
        "Down"
      ],
      "ctrl-w >": [
        "vim::ResizePane",
        "Widen"
      ],
      "ctrl-w <": [
        "vim::ResizePane",
        "Narrow"
      ],
      "ctrl-w -": [
        "vim::ResizePane",
        "Shorten"
      ],
      "ctrl-w +": [
        "vim::ResizePane",
        "Lengthen"
      ],
      "ctrl-w _": "vim::MaximizePane",
      "ctrl-w =": "vim::ResetPaneSizes",
      "ctrl-w g j": "pane::ActivateNextItem",
      "ctrl-w ctrl-g j": "pane::ActivateNextItem",
      "ctrl-w g shift-j": "pane::ActivatePrevItem",
      "ctrl-w ctrl-g shift-j": "pane::ActivatePrevItem",
      "ctrl-w w": "workspace::ActivateNextPane",
      "ctrl-w ctrl-w": "workspace::ActivateNextPane",
      "ctrl-w p": "workspace::ActivatePreviousPane",
      "ctrl-w ctrl-p": "workspace::ActivatePreviousPane",
      "ctrl-w shift-w": "workspace::ActivatePreviousPane",
      "ctrl-w ctrl-shift-w": "workspace::ActivatePreviousPane",
      "ctrl-w v": "pane::SplitVertical",
      "ctrl-w ctrl-v": "pane::SplitVertical",
      "ctrl-w s": "pane::SplitHorizontal",
      "ctrl-w shift-s": "pane::SplitHorizontal",
      "ctrl-w ctrl-s": "pane::SplitHorizontal",
      "ctrl-w c": "pane::CloseAllItems",
      "ctrl-w ctrl-c": "pane::CloseAllItems",
      "ctrl-w q": "pane::CloseAllItems",
      "ctrl-w ctrl-q": "pane::CloseAllItems",
      "ctrl-w o": "workspace::CloseInactiveTabsAndPanes",
      "ctrl-w ctrl-o": "workspace::CloseInactiveTabsAndPanes",
      "ctrl-w k": "workspace::NewFileSplitHorizontal",
      "ctrl-w ctrl-k": "workspace::NewFileSplitHorizontal"
    }
  },
  {
    "context": "EmptyPane || SharedScreen || MarkdownPreview || KeyContextView || Welcome",
    "bindings": {
      ":": "command_palette::Toggle",
      "g /": "pane::DeploySearch"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      ":": "command_palette::Toggle",
      "%": "project_panel::NewFile",
      "/": "project_panel::NewSearchInDirectory",
      "d": "project_panel::NewDirectory",
      "enter": "project_panel::OpenPermanent",
      "escape": "project_panel::ToggleFocus",
      "h": "project_panel::CollapseSelectedEntry",
      "n": "menu::SelectNext",
      "e": "menu::SelectPrev",
      "i": "project_panel::ExpandSelectedEntry",
      "o": "project_panel::OpenPermanent",
      "shift-d": "project_panel::Delete",
      "shift-r": "project_panel::Rename",
      "j": "project_panel::OpenPermanent",
      "v": "project_panel::OpenPermanent",
      "p": "project_panel::Open",
      "x": "project_panel::RevealInFileManager",
      "s": "project_panel::OpenWithSystem",
      "] c": "project_panel::SelectNextGitEntry",
      "[ c": "project_panel::SelectPrevGitEntry",
      "] d": "project_panel::SelectNextDiagnostic",
      "[ d": "project_panel::SelectPrevDiagnostic",
      "}": "project_panel::SelectNextDirectory",
      "{": "project_panel::SelectPrevDirectory",
      "shift-g": "menu::SelectLast",
      "g g": "menu::SelectFirst",
      "-": "project_panel::SelectParent",
      "ctrl-6": "pane::AlternateFile"
    }
  },
  {
    "context": "OutlinePanel && not_editing",
    "bindings": {
      "n": "menu::SelectNext",
      "e": "menu::SelectPrev",
      "shift-g": "menu::SelectLast",
      "g g": "menu::SelectFirst"
    }
  }
]